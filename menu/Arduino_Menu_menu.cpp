/*
    The code in this file uses open source libraries provided by thecoderscorner

    DO NOT EDIT THIS FILE, IT WILL BE GENERATED EVERY TIME YOU USE THE UI DESIGNER
    INSTEAD EITHER PUT CODE IN YOUR SKETCH OR CREATE ANOTHER SOURCE FILE.

    All the variables you may need access to are marked extern in this file for easy
    use elsewhere.
 */

#include <tcMenu.h>
#include "Arduino_Menu_menu.h"

// Global variable declarations

LiquidCrystal lcd(2, 1, 0, 4, 5, 6, 7);
LiquidCrystalRenderer renderer(lcd, 16, 2);

// Global Menu Item declarations

const PROGMEM AnyMenuInfo minfoHome = { "Home", 18, 0xffff, 0, onHome };
ActionMenuItem menuHome(&minfoHome, NULL);
const PROGMEM AnalogMenuInfo minfoPresetsHeatGunPreset2 = { "Preset 2", 17, 0xffff, 255, NO_CALLBACK, 0, 1, "Unit" };
AnalogMenuItem menuPresetsHeatGunPreset2(&minfoPresetsHeatGunPreset2, 0, NULL);
const PROGMEM AnalogMenuInfo minfoPresetsHeatGunPreset1 = { "Preset 1", 16, 0xffff, 255, NO_CALLBACK, 0, 1, "Unit" };
AnalogMenuItem menuPresetsHeatGunPreset1(&minfoPresetsHeatGunPreset1, 0, &menuPresetsHeatGunPreset2);
RENDERING_CALLBACK_NAME_INVOKE(fnPresetsHeatGunRtCall, backSubItemRenderFn, "Heat Gun", -1, NULL)
const PROGMEM SubMenuInfo minfoPresetsHeatGun = { "Heat Gun", 15, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackPresetsHeatGun(fnPresetsHeatGunRtCall, &menuPresetsHeatGunPreset1);
SubMenuItem menuPresetsHeatGun(&minfoPresetsHeatGun, &menuBackPresetsHeatGun, NULL);
const PROGMEM AnalogMenuInfo minfoPresetsIronPreset2 = { "Preset 2", 14, 0xffff, 255, NO_CALLBACK, 0, 1, "Deg" };
AnalogMenuItem menuPresetsIronPreset2(&minfoPresetsIronPreset2, 0, NULL);
const PROGMEM AnalogMenuInfo minfoPresetsIronPreset1 = { "Preset 1", 13, 0xffff, 400, NO_CALLBACK, 0, 10, "Deg" };
AnalogMenuItem menuPresetsIronPreset1(&minfoPresetsIronPreset1, 0, &menuPresetsIronPreset2);
RENDERING_CALLBACK_NAME_INVOKE(fnPresetsIronRtCall, backSubItemRenderFn, "Iron", -1, NULL)
const PROGMEM SubMenuInfo minfoPresetsIron = { "Iron", 12, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackPresetsIron(fnPresetsIronRtCall, &menuPresetsIronPreset1);
SubMenuItem menuPresetsIron(&minfoPresetsIron, &menuBackPresetsIron, &menuPresetsHeatGun);
RENDERING_CALLBACK_NAME_INVOKE(fnPresetsRtCall, backSubItemRenderFn, "Presets", -1, NULL)
const PROGMEM SubMenuInfo minfoPresets = { "Presets", 11, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackPresets(fnPresetsRtCall, &menuPresetsIron);
SubMenuItem menuPresets(&minfoPresets, &menuBackPresets, &menuHome);
const PROGMEM AnalogMenuInfo minfoGunCooldownMinFanSpeed = { "Min fan speed", 10, 0xffff, 100, NO_CALLBACK, 0, 10, "%" };
AnalogMenuItem menuGunCooldownMinFanSpeed(&minfoGunCooldownMinFanSpeed, 0, NULL);
const PROGMEM AnalogMenuInfo minfoGunCooldownCoolToTemp = { "Cool to temp", 9, 0xffff, 100, NO_CALLBACK, 0, 10, "Deg" };
AnalogMenuItem menuGunCooldownCoolToTemp(&minfoGunCooldownCoolToTemp, 0, &menuGunCooldownMinFanSpeed);
RENDERING_CALLBACK_NAME_INVOKE(fnGunCooldownRtCall, backSubItemRenderFn, "Gun Cooldown", -1, NULL)
const PROGMEM SubMenuInfo minfoGunCooldown = { "Gun Cooldown", 8, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackGunCooldown(fnGunCooldownRtCall, &menuGunCooldownCoolToTemp);
SubMenuItem menuGunCooldown(&minfoGunCooldown, &menuBackGunCooldown, &menuPresets);
const PROGMEM AnalogMenuInfo minfoIdleTimeWarningDelay = { "Warning delay", 7, 0xffff, 60, NO_CALLBACK, 0, 10, "Sec" };
AnalogMenuItem menuIdleTimeWarningDelay(&minfoIdleTimeWarningDelay, 0, NULL);
const PROGMEM BooleanMenuInfo minfoIdleTimeWarningBeep = { "Warning Beep", 6, 0xffff, 1, NO_CALLBACK, NAMING_ON_OFF };
BooleanMenuItem menuIdleTimeWarningBeep(&minfoIdleTimeWarningBeep, false, &menuIdleTimeWarningDelay);
const PROGMEM AnalogMenuInfo minfoIdleTimeTimeout = { "Timeout", 5, 0xffff, 30, NO_CALLBACK, 0, 5, "Min" };
AnalogMenuItem menuIdleTimeTimeout(&minfoIdleTimeTimeout, 0, &menuIdleTimeWarningBeep);
RENDERING_CALLBACK_NAME_INVOKE(fnIdleTimeRtCall, backSubItemRenderFn, "Idle Time", -1, NULL)
const PROGMEM SubMenuInfo minfoIdleTime = { "Idle Time", 4, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackIdleTime(fnIdleTimeRtCall, &menuIdleTimeTimeout);
SubMenuItem menuIdleTime(&minfoIdleTime, &menuBackIdleTime, &menuGunCooldown);
const PROGMEM AnalogMenuInfo minfoMaxTempsGun = { "Gun", 3, 0xffff, 400, NO_CALLBACK, 0, 10, "Deg" };
AnalogMenuItem menuMaxTempsGun(&minfoMaxTempsGun, 0, NULL);
const PROGMEM AnalogMenuInfo minfoMaxTempsIron = { "Iron", 2, 0xffff, 400, NO_CALLBACK, 0, 10, "Deg" };
AnalogMenuItem menuMaxTempsIron(&minfoMaxTempsIron, 0, &menuMaxTempsGun);
RENDERING_CALLBACK_NAME_INVOKE(fnMaxTempsRtCall, backSubItemRenderFn, "Max Temps", -1, NULL)
const PROGMEM SubMenuInfo minfoMaxTemps = { "Max Temps", 1, 0xffff, 0, NO_CALLBACK };
BackMenuItem menuBackMaxTemps(fnMaxTempsRtCall, &menuMaxTempsIron);
SubMenuItem menuMaxTemps(&minfoMaxTemps, &menuBackMaxTemps, &menuIdleTime);
const PROGMEM ConnectorLocalInfo applicationInfo = { "Soldering_Station", "9dd525b7-45a5-4336-99de-c1cccc7e1876" };

// Set up code

void setupMenu() {
    Wire.begin();
    lcd.setIoAbstraction(ioFrom8574(0x3f));
    lcd.begin(16, 2);
    lcd.configureBacklightPin(3);
    lcd.backlight();
    switches.initialiseInterrupt(ioUsingArduino(), true);
    menuMgr.initForEncoder(&renderer, &menuMaxTemps, 2, 3, 4);

    // Read only and local only function calls
    menuHome.setReadOnly(true);
}

